{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Cloud Formation template to install Tomcat and Java JDK on Amazon Linux",
    "Parameters": {
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
            "Type": "String"
        },
        "InstanceType": {
            "Description": "EC2 instance type",
            "Type": "String",
            "Default": "m1.small"
        },
        "VpcId": {
            "Type": "AWS::EC2::VPC::Id",
            "Description": "VpcId of your existing Virtual Private Cloud (VPC)",
            "ConstraintDescription": "must be the VPC Id of an existing Virtual Private Cloud."
        },
        "Subnets": {
            "Type": "List<AWS::EC2::Subnet::Id>",
            "Description": "The list of SubnetIds in your Virtual Private Cloud (VPC)",
            "ConstraintDescription": "must be a list of AT LEAST TWO existing subnets associated with at least two different availability zones."
        },
        "AllowedIP": {
            "Description": "The IP address range that can be used to connect to the EC2 instances, via http or ssh",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        }
    },
    "Mappings": {
        "AWSInstanceType2Arch" : {
            "t1.micro"    : { "Arch" : "PV64"   },
            "t2.nano"     : { "Arch" : "HVM64"  },
            "t2.micro"    : { "Arch" : "HVM64"  },
            "t2.small"    : { "Arch" : "HVM64"  },
            "t2.medium"   : { "Arch" : "HVM64"  },
            "t2.large"    : { "Arch" : "HVM64"  },
            "m1.small"    : { "Arch" : "PV64"   },
            "m1.medium"   : { "Arch" : "PV64"   },
            "m1.large"    : { "Arch" : "PV64"   },
            "m1.xlarge"   : { "Arch" : "PV64"   },
            "m2.xlarge"   : { "Arch" : "PV64"   },
            "m2.2xlarge"  : { "Arch" : "PV64"   },
            "m2.4xlarge"  : { "Arch" : "PV64"   },
            "m3.medium"   : { "Arch" : "HVM64"  },
            "m3.large"    : { "Arch" : "HVM64"  },
            "m3.xlarge"   : { "Arch" : "HVM64"  },
            "m3.2xlarge"  : { "Arch" : "HVM64"  },
            "m4.large"    : { "Arch" : "HVM64"  }
            },
        "AWSRegionArch2AMI": {
            "us-east-1": {
                "PV64": "ami-2a69aa47",
                "HVM64": "ami-6869aa05",
                "HVMG2": "ami-61e27177"
            },
            "us-west-2": {
                "PV64": "ami-7f77b31f",
                "HVM64": "ami-7172b611",
                "HVMG2": "ami-60aa3700"
            },
            "us-west-1": {
                "PV64": "ami-a2490dc2",
                "HVM64": "ami-31490d51",
                "HVMG2": "ami-4b694d2b"
            },
            "eu-west-1": {
                "PV64": "ami-4cdd453f",
                "HVM64": "ami-f9dd458a",
                "HVMG2": "ami-2955524f"
            },
            "eu-west-2": {
                "PV64": "NOT_SUPPORTED",
                "HVM64": "ami-886369ec",
                "HVMG2": "NOT_SUPPORTED"
            },
            "eu-central-1": {
                "PV64": "ami-6527cf0a",
                "HVM64": "ami-ea26ce85",
                "HVMG2": "ami-81ac71ee"
            },
            "ap-northeast-1": {
                "PV64": "ami-3e42b65f",
                "HVM64": "ami-374db956",
                "HVMG2": "ami-46220c21"
            },
            "ap-northeast-2": {
                "PV64": "NOT_SUPPORTED",
                "HVM64": "ami-2b408b45",
                "HVMG2": "NOT_SUPPORTED"
            },
            "ap-southeast-1": {
                "PV64": "ami-df9e4cbc",
                "HVM64": "ami-a59b49c6",
                "HVMG2": "ami-c212aba1"
            },
            "ap-southeast-2": {
                "PV64": "ami-63351d00",
                "HVM64": "ami-dc361ebf",
                "HVMG2": "ami-0ad2db69"
            },
            "ap-south-1": {
                "PV64": "NOT_SUPPORTED",
                "HVM64": "ami-ffbdd790",
                "HVMG2": "ami-ca3042a5"
            },
            "us-east-2": {
                "PV64": "NOT_SUPPORTED",
                "HVM64": "ami-f6035893",
                "HVMG2": "NOT_SUPPORTED"
            },
            "ca-central-1": {
                "PV64": "NOT_SUPPORTED",
                "HVM64": "ami-730ebd17",
                "HVMG2": "NOT_SUPPORTED"
            },
            "sa-east-1": {
                "PV64": "ami-1ad34676",
                "HVM64": "ami-6dd04501",
                "HVMG2": "NOT_SUPPORTED"
            },
            "cn-north-1": {
                "PV64": "ami-77559f1a",
                "HVM64": "ami-8e6aa0e3",
                "HVMG2": "NOT_SUPPORTED"
            }
        }
    },
    "Resources": {
        "ApplicationLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Subnets": {"Ref": "Subnets"}
            }
        },

        "ALBListener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "DefaultActions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "ALBTargetGroup"
                        }
                    }
                ],
                "LoadBalancerArn": { "Ref": "ApplicationLoadBalancer" },
                "Port": "80",
                "Protocol": "HTTP"
            }
        },

        "ALBTargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "HealthCheckPath": "/",
                "HealthCheckIntervalSeconds": 15,
                "HealthCheckTimeoutSeconds": 5,
                "HealthyThresholdCount": 3,
                "Port": 80,
                "Protocol": "HTTP",
                "UnhealthyThresholdCount": 5,
                "VpcId": { "Ref": "VpcId" },
                "TargetGroupAttributes": [
                    {
                        "Key": "stickiness.enabled",
                        "Value": "true"
                    },
                    {
                        "Key": "stickiness.type",
                        "Value": "lb_cookie"
                    },
                    {
                        "Key": "stickiness.lb_cookie.duration_seconds",
                        "Value": "30"
                    }
                ]
            }
        },

        "AutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties" : {
                "VPCZoneIdentifier" : { "Ref" : "Subnets" },
                "LaunchConfigurationName" : { "Ref" : "LaunchConfig" },
                "MinSize" : "1",
                "MaxSize" : "3",
                "DesiredCapacity" : "1",
                "TargetGroupARNs" : [ { "Ref" : "ALBTargetGroup" } ],
                "Tags" : [
                    {"Key" : "Name", "Value" : "Linux - Tomcat 8", "PropagateAtLaunch" : "true" },
                    {"Key" : "Owner", "Value" :  "Liam Rae-McLauchlan", "PropagateAtLaunch" : "true" }
                ]
            }
        },

        "ScaleUpPolicy" : {
            "Type" : "AWS::AutoScaling::ScalingPolicy",
            "Properties" : {
                "AdjustmentType" : "ChangeInCapacity",
                "AutoScalingGroupName" :  { "Ref" : "AutoScalingGroup" },
                "Cooldown" : "180",
                "ScalingAdjustment" : "1"
            }
        },

        "ScaleDownPolicy" : {
            "Type" : "AWS::AutoScaling::ScalingPolicy",
            "Properties" : {
                "AdjustmentType" : "ChangeInCapacity",
                "AutoScalingGroupName" :  { "Ref" : "AutoScalingGroup" },
                "Cooldown" : "180",
                "ScalingAdjustment" : "-1"
            }
        },

        "CPUAlarmHighAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "EvaluationPeriods": "1",
                "Statistic": "Average",
                "Threshold": "70",
                "AlarmDescription": "Alarm if CPU too high or metric disappears indicating instance is down",
                "Period": "600",
                "AlarmActions": [ { "Ref": "CPUAlarmEmail" }, {"Ref": "ScaleUpPolicy" } ],
                "Namespace": "AWS/EC2",
                "Dimensions": [ {
                    "Name": "AutoScalingGroupName",
                    "Value": { "Ref" : "AutoScalingGroup" }
                } ],
                "ComparisonOperator": "GreaterThanThreshold",
                "MetricName": "CPUUtilization"
            }
        },

        "CPUAlarmEmail" : {
            "Type" : "AWS::SNS::Topic",
            "Properties" : {
                "Subscription" : [ {
                    "Endpoint" : "it-support@guosto.com",
                    "Protocol" : "email"
                } ]
            }
        },
        
        "LaunchConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Metadata": {},
            "Properties": {
                "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
                "InstanceType"   : { "Ref" : "InstanceType" },
                "SecurityGroups" : [ {"Ref" : "WebServerSecurityGroup"} ],
                "KeyName"        : { "Ref" : "KeyName" },
                "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
                    "#!/bin/bash -xe\n",
                    "yum update -y aws-cfn-bootstrap\n",
                    "pip install ansible",
                    "pip install git",
                    "git clone https://github.com/liamraeNZ/GuostoTechTest /home/ec2-user/",
                    "cd /home/ec2-user",
                    "ansible server_config"
                ]]}}
            }           
        },
        "WebServerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable SSH and HTTP access from location defined in AllowedIP",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "AllowedIP"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": {
                            "Ref": "AllowedIP"
                        }
                    }
                ],                
                "VpcId" : { "Ref" : "VpcId" }
            }
        }
    }
}